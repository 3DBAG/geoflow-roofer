# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Print the installed software versions

on:
  push:
    branches: [ "feature/ci" ]
  pull_request:
    branches: [ "feature/ci" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      # See: https://github.com/actions/runner-images?tab=readme-ov-file#available-images
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-13, macos-14]

    steps:
      - if: runner.os == 'macOS'
        name: "macOS compilers"
        run: |
          echo "clang++ --version"
          clang++ --version
          echo '$(brew --prefix llvm@15)/bin/clang'
          echo "$(brew --prefix llvm@15)/bin/clang"
          $(brew --prefix llvm@15)/bin/clang --version

      - if: runner.os == 'Linux'
        name: "Linux compilers"
        run: |
          echo "clang++ --version"
          clang++ --version
          echo "clang++-15 --version"
          clang++-15 --version
          echo "g++ --version"
          g++ --version
          echo "g++-13 --version"
          g++-13 --version

## I don't know how to get the complier version in the command line on Windows
#      - if: runner.os == 'Windows'
#        name: "Windows compilers"
#        shell: powershell
#        run: cl.exe
